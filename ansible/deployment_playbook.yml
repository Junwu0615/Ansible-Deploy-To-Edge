---
- name: Deploy Edge Services from Private Registry
  # 僅針對單一的 WSL 目標主機執行
  hosts: wsl_host
  become: yes

  tasks:
    - name: 1. 配置 Insecure Registry (daemon.json)
      # 假設 daemon.json 放在 files/ 目錄下
      copy:
        src: files/daemon.json
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: '0644'

    - name: 2. 重啟 Docker Daemon 服務以載入新的配置
      ansible.builtin.systemd_service:
        name: docker
        state: restarted

    # ----------------------------------------------------
    # --- 模擬多裝置部署的主循環 ---
    # ----------------------------------------------------
    - name: LOOP: 部署應用程式到模擬裝置
      # 迭代 'device_configs' 群組中的所有成員 (edge_01, edge_02)
      with_items: "{{ groups['device_configs'] }}"
      block:
        - name: A. 建立裝置專屬部署目錄
          ansible.builtin.file:
            path: "/opt/{{ item }}_app"
            state: directory
            owner: "{{ ansible_user }}"
            mode: '0755'
          # 使用變數 `ansible_user`，確保目錄權限正確

        - name: B. 複製 docker-compose.yml 模板並渲染配置
          ansible.builtin.template:
            src: docker-compose.yml.j2
            dest: "/opt/{{ item }}_app/docker-compose.yml"
            owner: "{{ ansible_user }}"
            mode: '0644'
          vars:
            # 這是關鍵！從 inventory 取得當前裝置 (item) 的專屬變數
            # 必須使用 hostvars[item] 才能取得非當前 hosts 的變數
            DEVICE_ID: "{{ hostvars[item]['DEVICE_ID'] }}"
            LOG_LEVEL: "{{ hostvars[item]['LOG_LEVEL'] }}"
            DEPLOY_PORT: "{{ hostvars[item]['DEPLOY_PORT'] }}"

        - name: C. 部署 Docker Compose 服務
          community.docker.docker_compose_v2:
            project_src: "/opt/{{ item }}_app"
            project_name: "{{ item }}_project"
            state: present
            pull: yes
          environment:
            # 將變數傳遞給 docker compose 環境，供容器使用
            DEVICE_ID: "{{ hostvars[item]['DEVICE_ID'] }}"
            LOG_LEVEL: "{{ hostvars[item]['LOG_LEVEL'] }}"
          become: no
          remote_user: "{{ ansible_user }}" # 以非 root 使用者執行 docker compose